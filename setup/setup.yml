---

#
# use ansible to install the dockerized nas services onto a machine
#
# please install ansible on the machine to execute this setup script
# install ansible following the official ansible documentation:
# http://docs.ansible.com/intro_installation.html
#
# run the setup script with the following command line
# sudo ansible-playbook -c local setup.yml

- hosts: localhost

  tasks:
    - name: import setup variables
      include_vars: setup_vars.yml
      tags:
        - always

#
# install and configure docker
#

    - name: setup docker repository
      copy:
        src=./files/docker.repo
        dest=/etc/yum.repos.d/docker.repo
        owner=root
        group=root
        mode=644
        backup=no
      tags:
        - docker

    - name: install docker
      yum:
        name=docker-engine
        state=latest
      tags:
        - docker

    - name: copy docker defaults
      template:
        src=files/docker.j2
        dest=/etc/sysconfig/docker
        owner=root
        group=root
        mode=0644
      tags:
        - docker

    - name: copy docker service file due to docker defaults not workingf
      template:
        src=files/docker.service.j2
        dest=/usr/lib/systemd/system/docker.service
        owner=root
        group=root
        mode=0644
      tags:
        - docker

#
# setup dnas defaults
#

    - name: copy dnas environment file for systemd
      template:
        src=files/dnas.j2
        dest=/etc/sysconfig/dnas
        owner=root
        group=root
        mode=0644
      tags:
        - dnas

    - name: copy etcd environment file for systemd
      template:
        src=files/etcd.j2
        dest=/etc/sysconfig/etcd
        owner=root
        group=root
        mode=0644
      tags:
        - etcd

    - name: create etcd user account
      user:
        name=etcd
        createhome=no
        system=yes
        shell=/bin/nologin
        state=present
      tags:
        - etcd

    - name: create dnas base directory
      file:
        path={{dnas_base}}
        owner=root
        group=root
        mode=0755
        state=directory
      tags:
        - dnas
        - docker

    - name: create docker base directory
      file:
        path={{docker_base}}
        owner=root
        group=root
        mode=0700
        state=directory
      tags:
        - docker

    - name: create etcd base directory
      file:
        path={{etcd_base}}
        owner=etcd
        group=etcd
        mode=0755
        state=directory
      tags:
        - dnas
        - etcd

    - name: enable docker
      service:
        name=docker
        state=started
        enabled=yes
      tags:
        - docker


#
# could be done via etcd rpm!
#

    - name: download etcd for docker self configuration
      get_url:
        url={{etcd_download}}
        dest=/tmp/etcd.tar.gz
      tags:
        - etcd

    - name: extract etcd
      unarchive:
        src=/tmp/etcd.tar.gz dest=/opt
      tags:
        - etcd

    - name: create softlink for etcd
      file:
        src=/opt/{{etcd_version}}
        dest={{etcd_install}}
        owner=etcd
        group=etcd
        state=link
        force=yes
      tags:
        - etcd

    - name: copy service file
      template:
        src=files/etcd.service.j2
        dest=/etc/systemd/system/etcd.service
        owner=root
        group=root
        mode=0755
      tags:
        - etcd

    - name: copy etcd profile script
      template:
        src=files/etcd.profile.j2
        dest=/etc/profile.d/etcd.sh
        owner=root
        group=root
        mode=0644
      tags:
        - etcd

    - name: enable and start etcd
      service:
        name=etcd
        state=started
        enabled=yes
      tags:
        - etcd

#
# could be done via etcd rpm!
#

    - name: create dnas script directory
      file:
        path={{dnas_scripts}}
        state=directory
        owner=root
        group=root
        mode=0644
      tags:
        - dnas

    - name: get all dnas scripts from setup
      command: ls -1 ../scripts
      register: files
      tags:
        - dnas

    - name: copy the dnas scripts
      copy: cp -a ../scripts/{{item}} {{dnas_scripts}}
        src=../scripts/{{item}}
        dest={{dnas_scripts}}
        owner=root
        group=root
        mode=0755
      with_items: "{{files.stdout_lines}}"
      tags:
        - dnas
#
# compile jsson - a json parser cli
#

    - name: clone jshon to parse jsson output in bash
      git:
        repo={{jshon_download}}
        dest=/opt/jshon
      register: update
      tags:
        - dnas

    - name: install jansson devel libraries
      yum:
        name={{item}}
        state=latest
      with_items:
        - jansson-devel
        - gcc
      when: update.changed
      tags:
        - dnas

    - name: compile jshon
      command: make chdir=/opt/jshon
      when: update.changed
      tags:
        - dnas

    - name: install jshon
      command: make install chdir=/opt/jshon
      when: update.changed
      tags:
        - dnas

    - name: remove jshon build dependencies
      command: yum autoremove -y {{item}}
      with_items:
        - gcc
        - jansson-devel
      when: update.changed
      tags:
        - dnas
#
# install socat to access the docker socket via bash
#

    - name: install socat
      yum:
        name=socat
        state=latest
      tags:
        - dnas

#
# install crudini to work with the different ini files
# from the different containers
#

    - name: install crudini
      yum:
        name=crudini
        state=latest
      tags:
        - dnas

#
# setup the different docker containers
#

    - name: setup rssdler docker container
      include: ../container/rssdler/setup.yml

    - name: setup plex docker container
      include: ../container/plex/setup.yml

    - name: setup sabnzbd docker container
      include: ../container/sabnzbd/setup.yml

    - name: setup couchpotato docker container
      include: ../container/couchpotato/setup.yml

    - name: setup sickbeard docker container
      include: ../container/sickbeard/setup.yml

    - name: setup nzbtomedia docker container
      include: ../container/nzbtomedia/setup.yml

    - name: setup library docker container
      include: ../container/library/setup.yml

#
# add default service configuration to etcd
#
    - name: setup default config for sabnzbd
      shell: source /etc/profile.d/etcd.sh && source {{dnas_scripts}}/etcd_functions.sh && set_etcd "/services/sabnzbd/config/{{item.section}}/{{item.key}}" "key" "{{item.value}}"
      tags: default_config
      with_items: "{{sabnzbd_config}}"

    - name: setup default config for sickbeard
      shell: source /etc/profile.d/etcd.sh && source {{dnas_scripts}}/etcd_functions.sh && set_etcd /services/sickbeard/config/"{{item.section}}"/"{{item.key}}" "key" "{{item.value}}"
      with_items: "{{sickbeard_config}}"
      tags: default_config

    - name: setup default config for couchpotato
      shell: source /etc/profile.d/etcd.sh && source {{dnas_scripts}}/etcd_functions.sh && set_etcd /services/couchpotato/config/"{{item.section}}"/"{{item.key}}" "key" "{{item.value}}"
      with_items: "{{couchpotato_config}}"
      tags: default_config

    - name: setup default config for nzbtomedia
      shell: source /etc/profile.d/etcd.sh && source {{dnas_scripts}}/etcd_functions.sh && set_etcd /services/nzbtomedia/config/"{{item.section}}"/"{{item.key}}" "key" "{{item.value}}"
      with_items: "{{nzbtomedia_config}}"
      tags: default_config

#
# set up some basic landing page to access the different services
# running on the system
#

    - name: install nginx docker service file
      template:
        src=files/nginx-dnas.service.j2
        dest=/etc/systemd/system/nginx-dnas.service
        owner=root
        group=root
        mode=0755
      register: systemd
      tags:
        - landingpage

    - name: reload systemd daemon
      command: systemctl daemon-reload
      when: systemd.changed
      tags:
        - landingpage

    - name: create html directory to hold the landing page
      file:
        path={{dnas_html}}
        state=directory
        owner=root
        group=root
        mode=0755
      tags:
        - landingpage

    - name: copy the html page
      template:
        src=files/landingpage.html.j2
        dest={{dnas_html}}/index.html
        owner=root
        group=root
        mode=0755
      tags:
        - landingpage

    - name: enable the nginx container services
      service:
        name=nginx-dnas
        enabled=yes
      tags:
        - landingpage